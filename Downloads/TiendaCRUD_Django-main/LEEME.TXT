1. Si existe una carpeta llamada enviroment en nuestro proyecto eliminala y sigue con los siguientes pasos 

2. Luego dentro la carpeta Mi_tienda_Online buscamos el archivo settings.py lo abrimos y buscammos el array DATABASES,
 modificamos los datos dentro de los atributos NAME,PASSWORD,PORT segun tu gestor de bases mysql por ejemplo:
 //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -> DATABASES = {
                   'default': {
                               'ENGINE': 'django.db.backends.mysql',
                               'NAME': 'TiendaArgorithDB',
                               'USER':'root',
                               'PASSWORD':'micontra',
                               'HOST': 'localhost',
                               'PORT':'3306',  
                           }
                       }
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

3. Ejecuta este comando en la terminal del visual o cmd especificando el directorio del proyecto -> python -m venv enviroment 

4. activamos el enviroment con el comando -> .\enviroment\Scripts\activate

5. Instala django con el comando -> pip install django

6. Instala MySQL con el comando -> pip install PyMySQL

6. Instala MySQL con el comando -> pip install whitenoise

6. Instala MySQL con el comando -> pip install waitress 

6. Comando para crear nuestro archivo Requirements.txt -> pip freeze > requirements.txt 

6. crar un archivo de configuracion adentro carpeta raiz para la  configuraciÃ³n de Heroku -> Procfile

6. codificamos un comando dentro de el archivo Procfile -> web: waitress-serve --port=$PORT tiendacrud.wsgi:application



agregar el host de heroku al proyecto y lo pegamos en setting.py en -> ALLOWED_HOSTS = ['https://tienda-crud-db-e8cfcb01a935.herokuapp.com']


6. editamos en settings.py el -> MIDDLEWARE = [
                                            'whitenoise.middleware.WhiteNoiseMiddleware',
                                           ]

7. tambien al final del archivo settings.py creamos un array llamado -> STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

8. en el settings.py el array debug cambiarlo a -> false

9. agregar una dependencia en el settings.py que debajo del debug -> 

7. Instala cryptography con el comando -> pip install cryptography

8. nos dirigimos a la aplicacion de MySQL y los creaamos una base de datos llamado TiendaArgorithDB->

9. Nos dirigimos al gestor de base datos desde las applicaciones de inicio de windows, la abrimos nos autenticamos,
   luego creamos una base de datos llamada TiendaArgorithDB dentro de una consulta con el comando -> CREATE DATABASE TiendaArgorithDB; 
   Sombreamos el comando y ejecutamos con el icono de rayo 

10. Nos dirigimos nuevamente al visual estudio abrimos la terminal y creamos las migraciones con el comando -> python manage.py makemigrations

11. luego imporatmos y empujamos las migraciones al gestor de bases de datos con el comando -> python manage.py migrate

12. Finalizamos corriendo el servidor con el comando -> python manage.py runserver 
    Con Ctrl + Click abrimos la Url en el navegador

